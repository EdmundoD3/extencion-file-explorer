/* Estilos del modal */
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  justify-content: center;
  align-items: center;
}

.modal-content {
  /* La imagen se escalará para ajustarse al contenedor sin deformarse */
  max-width: 100%;
  max-height: 100%;

  /* Opcional: object-fit ya no es estrictamente necesario con max-width/height, 
     pero no hace daño dejarlo por compatibilidad o claridad. */
  object-fit: contain;
}

/* El video debe tener el mismo comportamiento de tamaño que la imagen */
#modalVideo {
  max-width: 100%;
  max-height: 100%;
}

.manage-modal {
  /* Este contenedor ahora es una capa transparente que ocupa todo el modal */
  position: absolute;
  inset: 0; /* Shorthand para top, right, bottom, left: 0 */
  /* IMPORTANTE: Hacemos que los clics atraviesen esta capa */
  pointer-events: none;
}

/* Hacemos que los hijos directos del contenedor sí sean clickables */
.manage-modal > * {
  pointer-events: auto;
}

/* El nuevo mini-menú en la esquina inferior derecha */
.controls-cluster {
  position: absolute;
  top: 15px;
  left: 15px;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 8px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  gap: 10px;
  z-index: 100;;
}

.controls-cluster {
  opacity: 0.4;
  transition: all 0.3s ease;
}
.controls-cluster:hover {
  opacity: 1;
}

.image-controls {
  /* Por defecto, los controles específicos de imagen están ocultos */
  display: none;
  /* Los hacemos flexibles para que sus hijos se alineen bien */
  align-items: center;
  gap: 10px;
}

/* Cuando el modal está en modo imagen, mostramos los controles de imagen */
#myModal.image-mode .image-controls {
  display: inline-flex;
}

.main-controls {
  display: inline-flex;
  align-items: center;
  gap: 15px; /* Espacio entre los botones de control */
  transition: all 0.3s ease; /* Transición suave */
  overflow: hidden;
}

/*   */
#table-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 10px;
}

#dynamic-table {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 10px;
}

#dynamic-table thead,
#dynamic-table tbody {
  display: contents;
}

#dynamic-table th,
#dynamic-table td {
  border: 1px solid #ccc;
  padding: 8px;
  text-align: left;
  background-color: #f9f9f9;
}

/* Añade esto a tu archivo CSS */
.control-btn {
  font-size: 28px; /* Aumentamos el tamaño de los iconos/botones */
  color: white;
  cursor: pointer;
  user-select: none; /* Evita que el texto del botón se seleccione */
  padding: 0 5px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  z-index: 100;
  /* Necesario para posicionar el timer dentro */
}

/* Oculta los controles cuando el cluster tiene la clase */
.controls-cluster.controls-hidden .main-controls {
  opacity: 0;
  width: 0;
  padding: 0;
  margin: 0;
  gap: 0;
}

.presentation-timer {
  position: absolute;
  bottom: 1px;
  right: 4px;
  font-size: 11px;
  font-weight: bold;
  color: white;
  background-color: rgba(0, 0, 0, 0.6);
  padding: 0px 4px;
  border-radius: 3px;
  display: none; /* Oculto por defecto */
}

#presentation-time {
  background-color: #1818182f;
}

.time-control {
  /* Usamos inline-flex para que se comporte como un elemento en línea pero con propiedades de flexbox */
  display: inline-flex;
  align-items: center;
  /* Ayuda a alinear verticalmente todo el bloque con los otros botones */
  vertical-align: middle;
  gap: 3px;
  color: white;
}

.time-control input {
  width: 45px; /* Tamaño suficiente para 3 dígitos */
  padding: 2px 4px;
  border-radius: 4px;
  border: 1px solid #555;
  color: white;
  text-align: center;
  font-size: 18px; /* Tamaño de fuente legible para el número */
  /* Opcional: Oculta las flechas de subir/bajar en el input numérico */
  -moz-appearance: textfield;
}

.time-control input::-webkit-outer-spin-button,
.time-control input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.time-control label {
  font-size: 18px; /* Hacemos la 's' más pequeña */
  padding-bottom: 1px; /* Pequeño ajuste para alinear visualmente con el número */
}

/* Posicionamos el botón de cerrar de forma independiente */
.control-btn.close {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 40px; /* Hacemos la 'X' más grande */
}

/* Por defecto, el botón de pausa está oculto */
#myModal #presentation-pause {
  display: none;
}

/* Cuando el modal está en modo presentación, ocultamos "play" y mostramos "pausa" */
#myModal.presentation-active #presentation-start {
  display: none;
}
#myModal.presentation-active #presentation-pause {
  display: inline-flex; /* Usamos inline-flex porque .control-btn lo es */
}
